generator client {
  provider = "prisma-client-js"
  output   = "./generated/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int        @id @default(autoincrement())
  name       String
  email      String     @unique
  password   String
  role       String     @default("user")
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  activities Activity[]
}

model Slide {
  id          Int        @id @default(autoincrement())
  title       String
  description String
  image       String
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  activities  Activity[]
}

model Service {
  id          Int        @id @default(autoincrement())
  title       String
  description String
  image       String
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  activities  Activity[]
}

model Work {
  id          Int        @id @default(autoincrement())
  title       String
  description String
  image       String
  category    String
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  activities  Activity[]
}

model Contact {
  id         Int        @id @default(autoincrement())
  address    String
  phone      String
  email      String
  facebook   String?
  twitter    String?
  instagram  String?
  linkedin   String?
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  activities Activity[]
}

model Activity {
  id          Int      @id @default(autoincrement())
  action      String
  entityType  String
  description String
  createdAt   DateTime @default(now())
  user        User     @relation(fields: [userId], references: [id])
  userId      Int
  slide       Slide?   @relation(fields: [slideId], references: [id])
  slideId     Int?
  service     Service? @relation(fields: [serviceId], references: [id])
  serviceId   Int?
  work        Work?    @relation(fields: [workId], references: [id])
  workId      Int?
  contact     Contact? @relation(fields: [contactId], references: [id])
  contactId   Int?
}
